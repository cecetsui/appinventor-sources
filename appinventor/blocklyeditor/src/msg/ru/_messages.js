// -*- mode: java; c-basic-offset: 2; -*-
// Copyright 2015 Massachusetts Institute of Technology. All rights reserved.

/**
 * @fileoverview Russian strings.
 * @author Russian Pootle Contributors
 */
'use strict';

goog.provide('Blockly.Msg.ru');

/**
 * Due to the frequency of long strings, the 80-column wrap rule need not apply
 * to message files.
 */

Blockly.Msg.ru.switch_language_to_russian = {
  // Switch language to Russian.
  category: '',
  helpUrl: '',
  init: function() {

    Blockly.Msg.ADD_COMMENT = 'Добавить комментарий';
    Blockly.Msg.ARRANGE_H = 'Упорядочить блоки по горизонтали';
    Blockly.Msg.ARRANGE_S = 'Упорядочить блоки по диагонали';
    Blockly.Msg.ARRANGE_V = 'Упорядочить блоки по вертикали';
    Blockly.Msg.COLLAPSE_ALL = 'Свернуть блоки';
    Blockly.Msg.COLLAPSE_BLOCK = 'Свернуть блок';
    Blockly.Msg.DELETE_BLOCK = 'Удалить блок';
    Blockly.Msg.DELETE_X_BLOCKS = 'Удалить %1 блоков';
    Blockly.Msg.DISABLE_BLOCK = 'Отключить блок';
    Blockly.Msg.DUPLICATE_BLOCK = 'Создать копию';
    Blockly.Msg.ENABLE_BLOCK = 'Включить блок';
    Blockly.Msg.EXPAND_ALL = 'Развернуть блоки';
    Blockly.Msg.EXPAND_BLOCK = 'Развернуть блок';
    Blockly.Msg.EXTERNAL_INPUTS = 'Дополнительные входы';
    Blockly.Msg.HELP = 'Справка';
    Blockly.Msg.HORIZONTAL_PARAMETERS = 'Расположить параметры горизонтально';
    Blockly.Msg.INLINE_INPUTS = 'Внутренний параметр';
    Blockly.Msg.LANG_CATEGORY_CONTROLS = 'Управление';
    Blockly.Msg.LANG_CATEGORY_LOGIC = 'Логика';
    Blockly.Msg.LANG_CATEGORY_MATH = 'Математика';
    Blockly.Msg.LANG_COLOUR_BLACK = 'чёрный';
    Blockly.Msg.LANG_COLOUR_BLUE = 'синий';
    Blockly.Msg.LANG_COLOUR_CYAN = 'голубой';
    Blockly.Msg.LANG_COLOUR_DARK_GRAY = 'тёмно-серый';
    Blockly.Msg.LANG_COLOUR_GRAY = 'серый';
    Blockly.Msg.LANG_COLOUR_GREEN = 'зеленый';
    Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = 'светло-серый';
    Blockly.Msg.LANG_COLOUR_MAGENTA = 'пурпурный';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = 'создать цвет';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = '"Цвет с заданными красной, зелёной, голубой и (необязательной) альфа составляющими"';
    Blockly.Msg.LANG_COLOUR_ORANGE = 'оранжевый';
    Blockly.Msg.LANG_COLOUR_PICKER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic';
    Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = 'чёрный';
    Blockly.Msg.LANG_COLOUR_PINK = 'розовый';
    Blockly.Msg.LANG_COLOUR_RED = 'красный';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = 'расщепить цвет';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = '"Список четырёх элементов, каждый в интервале от 0 до 255, представляющих красную, зелёную, синюю и альфа составляющие."';
    Blockly.Msg.LANG_COLOUR_WHITE = 'белый';
    Blockly.Msg.LANG_COLOUR_YELLOW = 'жёлтый';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = 'если';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = 'иначе';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST = '';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = 'то';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = 'если';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = 'Если проверяемое условие истинно';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = 'закрыть приложение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = 'закрыть приложение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = 'Закрывает все экраны в приложение и завершает приложение.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = 'закрыть экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = 'закрыть экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = 'Закрывает текущий экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = 'закрыть текстовый экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = 'закрыть текстовый экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = 'Закрывает текущий экран и возвращает текст приложению, которое';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = 'закрыть окно и возвратить значение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = 'результат';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = 'закрыть экран и возвратить значение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = 'Закрывает текущий экран и возвращает результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = 'выполнить/результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = 'результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = 'выполнить результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = 'Выполняет блоки в \'выполнить\' и возвращает значение. Полезно, если нужно выполнить процедуру до присваивания значения переменной.';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = 'выполнить, но проигнорировать';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = 'выполнить, но игнорировать результат';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = 'Выполняет включённый блок кода и игнорирует возвращаемое значение (если оно есть). Полезно, если нужно вызвать процедуру, возвращающую значение, когда значение не нужно.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL = 'http://en.wikipedia.org/wiki/Control_flow';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = 'из цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = 'выйти из цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = 'перейти к следующему шагу цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = 'Выходит из текущего цикла.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = 'Пропускает остаток текущего шага цикла и';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = 'Предупреждение:';
    Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = 'для';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX = ' в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = 'для элемента в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = 'в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = 'для каждого';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = 'элемент';
    Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = 'Выполняет блоки в секции \'выполнить\'  для каждого элемента в';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = 'для';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX = ' в интервале';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = 'для числа в интервале';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = 'до';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = 'для каждого';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = 'с';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = 'с шагом';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = 'число';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = 'Выполняет блоки в секции \'выполнить\' для каждого численного';
    Blockly.Msg.LANG_CONTROLS_FOR_HELPURL = '';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = 'с';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = 'до';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = 'с шагом';
    Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = 'Присваивает значения от стартового числа до конечного числа.';
    Blockly.Msg.LANG_CONTROLS_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#get';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = 'получить начальный текст';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = 'получить начальный текст';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = 'Возвращает текст, который был передан экрану при';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = 'получить начальное значение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = 'начальноеЗначение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = 'получить начальное значение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = 'Возвращает значение, которое было передано экрану при его';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = 'иначе если';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = 'Добавьте условие к блоку если';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = 'иначе';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = 'Добавляет заключительную секцию к блоку если, когда все условия ложны';
    Blockly.Msg.LANG_CONTROLS_IF_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#if';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = 'если';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = 'Добавляет, удаляет, меняет порядок секций';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = 'иначе';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = 'иначе если';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = 'если';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = 'то';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1 = 'Если условие истинно, то выполняет набор команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2 = 'Если условие истинно, то выполняет первую группу команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3 = 'Если первое условие истинно, то выполняет первую группу команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4 = 'Если первое условие истинно, то выполняет первую группу  команд.';
    Blockly.Msg.LANG_CONTROLS_NOTHING_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#nothing';
    Blockly.Msg.LANG_CONTROLS_NOTHING_TITLE = 'ничего';
    Blockly.Msg.LANG_CONTROLS_NOTHING_TOOLTIP = '"Ничего не возвращает. Используется для инициализации переменных или может быть включено в ячейку возвращенного значения. Это является эквивалентом null или Ничего."';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = 'открыть экран';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = 'открыть другой экран';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = 'Открывает экран в многоэкранном. приложении';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = 'открывает экран с начальным значением';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = 'начальноеЗначение';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = 'открыть ещё один экран с начальным значением';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = 'Открывает новый экран в многоэкранном приложении и передаёт';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = 'до тех пор, пока';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = 'повторять';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1 = 'Запускает блок в секции "делать", пока тест ...';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = 'Пока значение ложно, выполнять набор команд.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = 'Пока значение истинно, выполнять набор команд.';
    Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = 'проверить';
    Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = 'Выполняет блоки в секции \'выполнить\', пока условие';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = 'ложь';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = 'Возвращает логическое значение ложь';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = 'Возвращает логическое значение истина';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = 'истина';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true';
    Blockly.Msg.LANG_LOGIC_COMPARE_EQ = '=';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL = 'https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=';
    Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = 'Проверяет равенство двух объектов.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = 'Возвращает значение истина, если аргументы не равны';
    Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = 'логическое равенство';
    Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not';
    Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = 'не';
    Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = 'Возвращает значение истина, если аргумент ложен.';
    Blockly.Msg.LANG_LOGIC_OPERATION_AND = 'и';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or';
    Blockly.Msg.LANG_LOGIC_OPERATION_OR = 'или';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = 'Возвращает значение истина, если все аргументы истинны';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = 'Возвращает значение истина, если среди аргументов есть истинный';
    Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = '+';
    Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = '/';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#add';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = '-';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = '*';
    Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = '^';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = 'Возвращает сумму двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = 'возвращает частное от деления.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = 'Возвращает разность двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = 'Возвращает произведение двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = 'Возвращает первое число возведённое в';
    Blockly.Msg.LANG_MATH_COMPARE_EQ = '=';
    Blockly.Msg.LANG_MATH_COMPARE_GT = '>';
    Blockly.Msg.LANG_MATH_COMPARE_GTE = '≥';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL = '';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#=';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=';
    Blockly.Msg.LANG_MATH_COMPARE_LT = '<';
    Blockly.Msg.LANG_MATH_COMPARE_LTE = '≤';
    Blockly.Msg.LANG_MATH_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = 'Возвращает значение истина, если числа равны';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = 'Возвращает значение истина, если первое число больше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = 'Возвращает значение истина, если первое число больше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = 'Возвращает значение истина, если первое число меньше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = 'Возвращает значение истина, если первое число меньше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = 'Возвращает значение истина, если числа не равны';
    Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = 'число';
    Blockly.Msg.LANG_MATH_NUMBER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#number';
    Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = 'Задаёт число';
    Blockly.Msg.REMOVE_COMMENT = 'Удалить комментарий';
    Blockly.Msg.SORT_C = 'Отсортировать блоки по категории';
    Blockly.Msg.SORT_H = 'Отсортировать блоки по высоте';
    Blockly.Msg.SORT_W = 'Отсортировать блоки по ширине';
    Blockly.Msg.VERTICAL_PARAMETERS = 'Расположить параметры вертикально';
  }
};

// Initalize language definition to Russian
Blockly.Msg.ru.switch_language_to_russian.init();
